name: Build Android APK

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  release:
    types: [published]

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Set up Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.24.0'
        channel: 'stable'

    - name: Cache Flutter dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.pub-cache
          .dart_tool
        key: ${{ runner.os }}-flutter-${{ hashFiles('**/pubspec.yaml') }}
        restore-keys: |
          ${{ runner.os }}-flutter-

    - name: Get Flutter dependencies
      run: flutter pub get

    - name: Analyze Flutter code
      run: flutter analyze

    - name: Run Flutter tests
      run: flutter test

    - name: Configure Gradle for CI
      run: |
        echo "org.gradle.daemon=false" >> gradle.properties
        echo "org.gradle.parallel=false" >> gradle.properties
        echo "org.gradle.configureondemand=false" >> gradle.properties

    - name: Clean and build APK (with retry)
      run: |
        for i in {1..3}; do
          echo "Build attempt $i"
          flutter clean
          flutter pub get
          if flutter build apk --release; then
            echo "Build successful on attempt $i"
            break
          else
            echo "Build failed on attempt $i"
            if [ $i -eq 3 ]; then
              echo "All build attempts failed"
              exit 1
            fi
            sleep 10
          fi
        done

    - name: Upload APK
      uses: actions/upload-artifact@v3
      with:
        name: app-release-apk
        path: build/app/outputs/flutter-apk/app-release.apk

    - name: Create Release
      if: github.event_name == 'release'
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: build/app/outputs/flutter-apk/app-release.apk
        asset_name: app-drawer-${{ github.event.release.tag_name }}.apk
        asset_content_type: application/vnd.android.package-archive 